{"version":3,"sources":["webpack://toNumberX/webpack/universalModuleDefinition","webpack://toNumberX/webpack/bootstrap","webpack://toNumberX/./node_modules/is-symbol/index.js","webpack://toNumberX/./node_modules/is-primitive/index.js","webpack://toNumberX/./node_modules/attempt-x/src/attempt-x.js","webpack://toNumberX/./node_modules/is-date-object/index.js","webpack://toNumberX/./node_modules/has-symbols/index.js","webpack://toNumberX/(webpack)/buildin/global.js","webpack://toNumberX/./node_modules/has-symbols/shams.js","webpack://toNumberX/./node_modules/has-symbol-support-x/src/has-symbol-support-x.js","webpack://toNumberX/./node_modules/to-boolean-x/src/to-boolean-x.js","webpack://toNumberX/./node_modules/to-string-tag-x/src/to-string-tag-x.js","webpack://toNumberX/./node_modules/has-to-string-tag-x/src/has-to-string-tag-x.js","webpack://toNumberX/./node_modules/is-nil-x/src/is-nil-x.js","webpack://toNumberX/./node_modules/require-object-coercible-x/src/require-object-coercible-x.js","webpack://toNumberX/./node_modules/to-string-x/src/to-string-x.js","webpack://toNumberX/./node_modules/require-coercible-to-string-x/src/require-coercible-to-string-x.js","webpack://toNumberX/./node_modules/white-space-x/src/white-space-x.js","webpack://toNumberX/./node_modules/trim-left-x/src/trim-left-x.js","webpack://toNumberX/./node_modules/trim-right-x/src/trim-right-x.js","webpack://toNumberX/./node_modules/trim-x/src/trim-x.js","webpack://toNumberX/./node_modules/normalize-space-x/src/normalize-space-x.js","webpack://toNumberX/./node_modules/replace-comments-x/src/replace-comments-x.js","webpack://toNumberX/./node_modules/is-function-x/src/is-function-x.js","webpack://toNumberX/./node_modules/is-falsey-x/src/is-falsey-x.js","webpack://toNumberX/./node_modules/to-primitive-x/src/to-primitive-x.js","webpack://toNumberX/./node_modules/nan-x/src/nan-x.js","webpack://toNumberX/./node_modules/parse-int-x/src/parse-int-x.js","webpack://toNumberX/./dist/to-number-x.esm.js"],"names":["root","factory","exports","module","define","amd","self","window","global","Function","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","toStr","toString","symToStr","symStringRegex","valueOf","test","isSymbolObject","e","val","fn","args","threw","apply","this","getDay","Date","hasToStringTag","tryDateObject","origSymbol","hasSymbolSham","g","getOwnPropertySymbols","iterator","obj","sym","symObj","keys","length","getOwnPropertyNames","syms","propertyIsEnumerable","getOwnPropertyDescriptor","descriptor","has_symbol_support_x","toBoolean","nativeObjectToString","has_to_string_tag_x","isNil","RequireObjectCoercible","TypeError","ToString","is_symbol_default","constructor","requireCoercibleToString","list","code","description","es5","es2015","es2016","es2017","es2018","string","stringES2016","stringES2018","white_space_x_length","white_space_x","string2016","RegExpCtr","reLeft2016","reLeft","replace","trimLeft2016","trimLeft2018","trim_right_x_RegExpCtr","reRight2016","reRight2018","trim_right_x_replace","trim2016","trimRight2016","trim2018","trimRight2018","normalize_space_x_RegExpCtr","reNormalize2018","normalize_space_x_replace","STRIP_COMMENTS","replace_comments_x_replace","fToString","funcTag","genTag","asyncTag","ctrRx","hasNativeClass","attempt_x_default","testClassstring","normalizeSpace2018","replacement","arguments","replaceComments","isES6ClassFn","result","tryFuncToString","allowClass","a","isFunction","is_primitive_default","isFalsey","strTag","symToPrimitive","toPrimitive","symValueOf","toStringOrder","toNumberOrder","ordinaryToPrimitive","O","hint","methodNames","method","getMethod","P","func","input","preferredType","exoticToPrim","String","Number","is_date_object_default","nan_x","nativeParseInt","parseInt","castNumber","charAt","hexRegex","parse_int_x_test","parseInt2016","radix","str","parseInt2018","__webpack_exports__","toNumber2016","toNumber2018","binaryRadix","octalRadix","testCharsCount","ERROR_MESSAGE","to_number_x_esm_castNumber","pStrSlice","slice","binaryRegex","RegExpConstructor","to_number_x_esm_test","isBinary","octalRegex","isOctal","nonWSregex2016","hasNonWS2016","nonWSregex2018","hasNonWS2018","invalidHexLiteral","isInvalidHexLiteral","argument","trimmed"],"mappings":"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","file":"to-number-x.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"toNumberX\"] = factory();\n\telse\n\t\troot[\"toNumberX\"] = factory();\n})((function () {\n  'use strict';\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  return Function('return this')();\n}()), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isRealSymbolObject(value) {\n\t\tif (typeof value.valueOf() !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\n\tmodule.exports = function isSymbol(value) {\n\t\tif (typeof value === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false && value;\n\t};\n}\n","/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isPrimitive(val) {\n  if (typeof val === 'object') {\n    return val === null;\n  }\n  return typeof val !== 'function';\n};\n","/**\n * This method attempts to invoke the function, returning either the result or\n * the caught error object. Any additional arguments are provided to the\n * function when it's invoked.\n *\n * @param {Function} fn - The function to attempt.\n * @param {...*} [args] - The arguments to invoke the function with.\n * @returns {object} Returns an object of the result.\n */\nmodule.exports = function attempt(fn, ...args) {\n  try {\n    return {\n      threw: false,\n      value: fn.apply(this, args),\n    };\n  } catch (e) {\n    return {\n      threw: true,\n      value: e,\n    };\n  }\n};\n","'use strict';\n\nvar getDay = Date.prototype.getDay;\nvar tryDateObject = function tryDateObject(value) {\n\ttry {\n\t\tgetDay.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar toStr = Object.prototype.toString;\nvar dateClass = '[object Date]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isDateObject(value) {\n\tif (typeof value !== 'object' || value === null) { return false; }\n\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n};\n","'use strict';\n\nvar origSymbol = global.Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\n/* eslint complexity: [2, 17], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","/**\n * Indicates if `Symbol`exists and creates the correct type.\n * `true`, if it exists and creates the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default typeof Symbol === 'function' &&\n  /* eslint-disable-next-line compat/compat */\n  typeof Symbol('') === 'symbol';\n","/**\n * The abstract operation ToBoolean converts argument to a value of type Boolean.\n *\n * @param {*} [value] - The value to be converted.\n * @returns {boolean} 'true' if value is truthy; otherwise 'false'.\n */\nexport default function toBoolean(value) {\n  return !!value;\n}\n","const nativeObjectToString = {}.toString;\n\n/**\n * The `toStringTag` method returns \"[object type]\", where type is the\n * object type.\n *\n * @param {*} [value] - The object of which to get the object type string.\n * @returns {string} The object type string.\n */\nexport default function toStringTag(value) {\n  if (value === null) {\n    return '[object Null]';\n  }\n\n  if (typeof value === 'undefined') {\n    return '[object Undefined]';\n  }\n\n  return nativeObjectToString.call(value);\n}\n","import hasSymbols from 'has-symbol-support-x';\n\n/**\n * Indicates if `Symbol.toStringTag`exists and is the correct type.\n * `true`, if it exists and is the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbols &&\n  /* eslint-disable-next-line compat/compat */\n  typeof Symbol.toStringTag === 'symbol';\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @param {*} [value] - The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n */\nexport default function isNil(value) {\n  /* eslint-disable-next-line lodash/prefer-is-nil */\n  return value === null || typeof value === 'undefined';\n}\n","import isNil from 'is-nil-x';\n\n/**\n * The abstract operation RequireObjectCoercible throws an error if argument\n * is a value that cannot be converted to an Object using ToObject.\n *\n * @param {*} [value] - The `value` to check.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {string} The `value`.\n */\nexport default function RequireObjectCoercible(value) {\n  if (isNil(value)) {\n    throw new TypeError(`Cannot call method on ${value}`);\n  }\n\n  return value;\n}\n","import isSymbol from 'is-symbol';\n\n/**\n * The abstract operation ToString converts argument to a value of type String.\n *\n * @param {*} [value] - The value to convert to a string.\n * @throws {TypeError} If `value` is a Symbol.\n * @returns {string} The converted value.\n */\nexport default function ToString(value) {\n  if (isSymbol(value)) {\n    throw new TypeError('Cannot convert a Symbol value to a string');\n  }\n\n  return ''.constructor(value);\n}\n","import requireObjectCoercible from 'require-object-coercible-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method requires an argument is corecible then converts using ToString.\n *\n * @param {*} [value] - The value to converted to a string.\n * @throws {TypeError} If value is null or undefined.\n * @returns {string} The value as a string.\n */\nexport default function requireCoercibleToString(value) {\n  return toStr(requireObjectCoercible(value));\n}\n","/**\n * A record of a white space character.\n *\n * @typedef {object} CharRecord\n * @property {number} code - The character code.\n * @property {string} description - A description of the character.\n * @property {boolean} es5 - Whether the spec lists this as a white space.\n * @property {boolean} es2015 - Whether the spec lists this as a white space.\n * @property {boolean} es2016 - Whether the spec lists this as a white space.\n * @property {boolean} es2017 - Whether the spec lists this as a white space.\n * @property {boolean} es2018 - Whether the spec lists this as a white space.\n * @property {string} string - The character string.\n */\n\n/**\n * An array of the whitespace char codes, string, descriptions and language\n * presence in the specifications.\n *\n * @type Array.<CharRecord>\n */\nexport const list = [\n  {\n    code: 0x0009,\n    description: 'Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0009',\n  },\n  {\n    code: 0x000a,\n    description: 'Line Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000a',\n  },\n  {\n    code: 0x000b,\n    description: 'Vertical Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000b',\n  },\n  {\n    code: 0x000c,\n    description: 'Form Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000c',\n  },\n  {\n    code: 0x000d,\n    description: 'Carriage Return',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000d',\n  },\n  {\n    code: 0x0020,\n    description: 'Space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0020',\n  },\n  /*\n  {\n    code: 0x0085,\n    description: 'Next line',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u0085'\n  }\n  */\n  {\n    code: 0x00a0,\n    description: 'No-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u00a0',\n  },\n  {\n    code: 0x1680,\n    description: 'Ogham space mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u1680',\n  },\n  {\n    code: 0x180e,\n    description: 'Mongolian vowel separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: false,\n    es2018: false,\n    string: '\\u180e',\n  },\n  {\n    code: 0x2000,\n    description: 'En quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2000',\n  },\n  {\n    code: 0x2001,\n    description: 'Em quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2001',\n  },\n  {\n    code: 0x2002,\n    description: 'En space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2002',\n  },\n  {\n    code: 0x2003,\n    description: 'Em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2003',\n  },\n  {\n    code: 0x2004,\n    description: 'Three-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2004',\n  },\n  {\n    code: 0x2005,\n    description: 'Four-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2005',\n  },\n  {\n    code: 0x2006,\n    description: 'Six-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2006',\n  },\n  {\n    code: 0x2007,\n    description: 'Figure space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2007',\n  },\n  {\n    code: 0x2008,\n    description: 'Punctuation space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2008',\n  },\n  {\n    code: 0x2009,\n    description: 'Thin space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2009',\n  },\n  {\n    code: 0x200a,\n    description: 'Hair space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u200a',\n  },\n  /*\n  {\n    code: 0x200b,\n    description: 'Zero width space',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u200b'\n  },\n  */\n  {\n    code: 0x2028,\n    description: 'Line separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2028',\n  },\n  {\n    code: 0x2029,\n    description: 'Paragraph separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2029',\n  },\n  {\n    code: 0x202f,\n    description: 'Narrow no-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u202f',\n  },\n  {\n    code: 0x205f,\n    description: 'Medium mathematical space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u205f',\n  },\n  {\n    code: 0x3000,\n    description: 'Ideographic space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u3000',\n  },\n  {\n    code: 0xfeff,\n    description: 'Byte Order Mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\ufeff',\n  },\n];\n\n/**\n * A string of the ES5 to ES2016 whitespace characters.\n *\n * @type string\n */\nlet stringES2016 = '';\n\n/**\n * A string of the ES2017 to ES2018 whitespace characters.\n *\n * @type string\n */\nlet stringES2018 = '';\nconst {length} = list;\nfor (let i = 0; i < length; i += 1) {\n  if (list[i].es2016) {\n    stringES2016 += list[i].string;\n  }\n\n  if (list[i].es2018) {\n    stringES2018 += list[i].string;\n  }\n}\n\nconst string2018 = stringES2018;\n\nexport default string2018;\nexport const string2016 = stringES2016;\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace, {string2016} from 'white-space-x';\n\nconst RegExpCtr = /none/.constructor;\nconst reLeft2016 = new RegExpCtr(`^[${string2016}]+`);\nconst reLeft = new RegExpCtr(`^[${whiteSpace}]+`);\nconst {replace} = '';\n\n/**\n * This method removes whitespace from the left end of a string. (ES2016).\n *\n * @param {string} string - The string to trim the left end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The left trimmed string.\n */\nexport function trimLeft2016(string) {\n  return replace.call(requireCoercibleToString(string), reLeft2016, '');\n}\n\n/**\n * This method removes whitespace from the left end of a string. (ES2018).\n *\n * @param {string} string - The string to trim the left end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The left trimmed string.\n */\nexport default function trimLeft2018(string) {\n  return replace.call(requireCoercibleToString(string), reLeft, '');\n}\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace, {string2016} from 'white-space-x';\n\nconst RegExpCtr = /none/.constructor;\nconst reRight2016 = new RegExpCtr(`[${string2016}]+$`);\nconst reRight2018 = new RegExpCtr(`[${whiteSpace}]+$`);\nconst {replace} = '';\n\n/**\n * This method removes whitespace from the right end of a string. (ES2016).\n *\n * @param {string} string - The string to trim the right end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The right trimmed string.\n */\nexport function trimRight2016(string) {\n  return replace.call(requireCoercibleToString(string), reRight2016, '');\n}\n\n/**\n * This method removes whitespace from the right end of a string. (ES2018).\n *\n * @param {string} string - The string to trim the right end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The right trimmed string.\n */\nexport default function trimRight2018(string) {\n  return replace.call(requireCoercibleToString(string), reRight2018, '');\n}\n","import trimLeft, {trimLeft2016} from 'trim-left-x';\nimport trimRight, {trimRight2016} from 'trim-right-x';\n\n/**\n * This method removes whitespace from the left and right end of a string.\n * (ES2016).\n *\n * @param {string} string - The string to trim the whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The trimmed string.\n */\nexport function trim2016(string) {\n  return trimLeft2016(trimRight2016(string));\n}\n\n/**\n * This method removes whitespace from the left and right end of a string.\n * (ES2018).\n *\n * @param {string} string - The string to trim the whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The trimmed string.\n */\nexport default function trim2018(string) {\n  return trimLeft(trimRight(string));\n}\n","import trim, {trim2016} from 'trim-x';\nimport whiteSpace, {string2016} from 'white-space-x';\n\nconst RegExpCtr = /none/.constructor;\nconst reNormalize2016 = new RegExpCtr(`[${string2016}]+`, 'g');\nconst reNormalize2018 = new RegExpCtr(`[${whiteSpace}]+`, 'g');\nconst {replace} = '';\n\n/**\n * This method strips leading and trailing white-space from a string,\n * replaces sequences of whitespace characters by a single space,\n * and returns the resulting string. (ES2016).\n *\n * @param {string} string - The string to be normalized.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The normalized string.\n */\nexport function normalizeSpace2016(string) {\n  return replace.call(trim2016(string), reNormalize2016, ' ');\n}\n\n/**\n * This method strips leading and trailing white-space from a string,\n * replaces sequences of whitespace characters by a single space,\n * and returns the resulting string. (ES2018).\n *\n * @param {string} string - The string to be normalized.\n * @throws {TypeError} If string is null or undefined or not coercible.\n */\nexport default function normalizeSpace2018(string) {\n  return replace.call(trim(string), reNormalize2018, ' ');\n}\n","import toStr from 'to-string-x';\nimport requireCoercibleToString from 'require-coercible-to-string-x';\n\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nconst {replace} = '';\n\n/**\n * This method replaces comments in a string.\n *\n * @param {string} string - The string to be stripped.\n * @param {string} [replacement=''] - The string to be used as a replacement.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @throws {TypeError} If replacement is not coercible.\n * @returns {string} The new string with the comments replaced.\n */\nexport default function replaceComments(string, replacement) {\n  return replace.call(requireCoercibleToString(string), STRIP_COMMENTS, arguments.length > 1 ? toStr(replacement) : '');\n}\n","import attempt from 'attempt-x';\nimport toBoolean from 'to-boolean-x';\nimport isFalsey from 'is-falsey-x';\nimport toStringTag from 'to-string-tag-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport isPrimitive from 'is-primitive';\nimport normalise from 'normalize-space-x';\nimport deComment from 'replace-comments-x';\n\nconst fToString = Function.prototype.toString;\nconst funcTag = '[object Function]';\nconst genTag = '[object GeneratorFunction]';\nconst asyncTag = '[object AsyncFunction]';\nconst ctrRx = /^class /;\nconst {test} = ctrRx;\n\nconst hasNativeClass =\n  attempt(() => {\n    /* eslint-disable-next-line no-new-func */\n    return Function('\"use strict\"; return class My {};')();\n  }).threw === false;\n\nconst testClassstring = function _testClassstring(value) {\n  return test.call(ctrRx, normalise(deComment(fToString.call(value), ' ')));\n};\n\nconst isES6ClassFn = function isES6ClassFunc(value) {\n  const result = attempt(testClassstring, value);\n\n  return result.threw === false && result.value;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @private\n * @param {*} value - The value to check.\n * @param {boolean} allowClass - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst tryFuncToString = function funcToString(value, allowClass) {\n  if (hasNativeClass && allowClass === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return attempt.call(value, fToString).threw === false;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @param {*} value - The value to check.\n * @param {boolean} [allowClass=false] - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nexport default function isFunction(value, allowClass) {\n  if (isPrimitive(value)) {\n    return false;\n  }\n\n  if (hasToStringTag) {\n    return tryFuncToString(value, toBoolean(allowClass));\n  }\n\n  if (hasNativeClass && isFalsey(allowClass) && isES6ClassFn(value)) {\n    return false;\n  }\n\n  const strTag = toStringTag(value);\n\n  return strTag === funcTag || strTag === genTag || strTag === asyncTag;\n}\n","import toBoolean from 'to-boolean-x';\n\n/**\n * This method tests if a given value is falsey.\n *\n * @param {*} [value] - The value to test.\n * @returns {boolean} `true` if the value is falsey: otherwise `false`.\n */\nexport default function isFalsey(value) {\n  return toBoolean(value) === false;\n}\n","import hasSymbols from 'has-symbol-support-x';\nimport isPrimitive from 'is-primitive';\nimport isDate from 'is-date-object';\nimport isSymbol from 'is-symbol';\nimport isFunction from 'is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport isNil from 'is-nil-x';\n\n/* eslint-disable-next-line compat/compat */\nconst symToPrimitive = hasSymbols && Symbol.toPrimitive;\n/* eslint-disable-next-line compat/compat */\nconst symValueOf = hasSymbols && Symbol.prototype.valueOf;\n\nconst toStringOrder = ['toString', 'valueOf'];\nconst toNumberOrder = ['valueOf', 'toString'];\nconst orderLength = 2;\n\nconst ordinaryToPrimitive = function _ordinaryToPrimitive(O, hint) {\n  requireObjectCoercible(O);\n\n  if (typeof hint !== 'string' || (hint !== 'number' && hint !== 'string')) {\n    throw new TypeError('hint must be \"string\" or \"number\"');\n  }\n\n  const methodNames = hint === 'string' ? toStringOrder : toNumberOrder;\n  let method;\n  let result;\n  for (let i = 0; i < orderLength; i += 1) {\n    method = O[methodNames[i]];\n\n    if (isFunction(method)) {\n      result = method.call(O);\n\n      if (isPrimitive(result)) {\n        return result;\n      }\n    }\n  }\n\n  throw new TypeError('No default value');\n};\n\nconst getMethod = function _getMethod(O, P) {\n  const func = O[P];\n\n  if (isNil(func) === false) {\n    if (isFunction(func) === false) {\n      throw new TypeError(`${func} returned for property ${P} of object ${O} is not a function`);\n    }\n\n    return func;\n  }\n\n  /* eslint-disable-next-line no-void */\n  return void 0;\n};\n\n/**\n * This method converts a JavaScript object to a primitive value.\n * Note: When toPrimitive is called with no hint, then it generally behaves as\n * if the hint were Number. However, objects may over-ride this behaviour by\n * defining a @@toPrimitive method. Of the objects defined in this specification\n * only Date objects (see 20.3.4.45) and Symbol objects (see 19.4.3.4) over-ride\n * the default ToPrimitive behaviour. Date objects treat no hint as if the hint\n * were String.\n *\n * @param {*} input - The input to convert.\n * @param {NumberConstructor|StringConstructor} [preferredType] - The preferred type (String or Number).\n * @throws {TypeError} If unable to convert input to a primitive.\n * @returns {string|number} The converted input as a primitive.\n * @see {http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive}\n */\nexport default function toPrimitive(input, preferredType) {\n  if (isPrimitive(input)) {\n    return input;\n  }\n\n  let hint = 'default';\n\n  if (arguments.length > 1) {\n    if (preferredType === String) {\n      hint = 'string';\n    } else if (preferredType === Number) {\n      hint = 'number';\n    }\n  }\n\n  let exoticToPrim;\n\n  if (hasSymbols) {\n    if (symToPrimitive) {\n      exoticToPrim = getMethod(input, symToPrimitive);\n    } else if (isSymbol(input)) {\n      exoticToPrim = symValueOf;\n    }\n  }\n\n  if (typeof exoticToPrim !== 'undefined') {\n    const result = exoticToPrim.call(input, hint);\n\n    if (isPrimitive(result)) {\n      return result;\n    }\n\n    throw new TypeError('unable to convert exotic object to primitive');\n  }\n\n  if (hint === 'default' && (isDate(input) || isSymbol(input))) {\n    hint = 'string';\n  }\n\n  return ordinaryToPrimitive(input, hint === 'default' ? 'number' : hint);\n}\n","/**\n * The constant NaN derived mathematically by 0 / 0.\n *\n * @type number\n */\nexport default 0 / 0;\n","import NAN from 'nan-x';\nimport toStr from 'to-string-x';\nimport trimLeft, {trimLeft2016} from 'trim-left-x';\n\nconst nativeParseInt = parseInt;\n/**  @type {Function} */\nconst castNumber = (0).constructor;\n// noinspection JSPotentiallyInvalidConstructorUsage\nconst {charAt} = ''.constructor.prototype;\nconst hexRegex = /^[-+]?0[xX]/;\nconst {test} = hexRegex;\n\n/**\n * This method parses a string argument and returns an integer of the specified\n * radix (the base in mathematical numeral systems). (ES2016).\n *\n * @param {string} [string] - The value to parse. If the string argument is not a\n *  string, then it is converted to a string (using the ToString abstract\n *  operation). Leading whitespace in the string argument is ignored.\n * @param {number} [radix] - An integer between 2 and 36 that represents the radix\n *  (the base in mathematical numeral systems) of the above mentioned string.\n *  Specify 10 for the decimal numeral system commonly used by humans. Always\n *  specify this parameter to eliminate reader confusion and to guarantee\n *  predictable behavior. Different implementations produce different results\n *  when a radix is not specified, usually defaulting the value to 10.\n * @throws {TypeError} If target is a Symbol or is not coercible.\n * @returns {number} An integer number parsed from the given string. If the first\n *  character cannot be converted to a number, NaN is returned.\n */\nexport function parseInt2016(string, radix) {\n  const str = trimLeft2016(toStr(string));\n\n  return nativeParseInt(str, castNumber(radix) || (test.call(hexRegex, str) ? 16 : 10));\n}\n\n/**\n * This method parses a string argument and returns an integer of the specified\n * radix (the base in mathematical numeral systems). (ES2018).\n *\n * @param {string} [string] - The value to parse. If the string argument is not a\n *  string, then it is converted to a string (using the ToString abstract\n *  operation). Leading whitespace in the string argument is ignored.\n * @param {number} [radix] - An integer between 2 and 36 that represents the radix\n *  (the base in mathematical numeral systems) of the above mentioned string.\n *  Specify 10 for the decimal numeral system commonly used by humans. Always\n *  specify this parameter to eliminate reader confusion and to guarantee\n *  predictable behavior. Different implementations produce different results\n *  when a radix is not specified, usually defaulting the value to 10.\n * @throws {TypeError} If target is a Symbol or is not coercible.\n * @returns {number} An integer number parsed from the given string. If the first\n *  character cannot be converted to a number, NaN is returned.\n */\nexport default function parseInt2018(string, radix) {\n  const str = trimLeft(toStr(string));\n\n  if (charAt.call(str, 0) === '\\u180E') {\n    return NAN;\n  }\n\n  return nativeParseInt(str, castNumber(radix) || (test.call(hexRegex, str) ? 16 : 10));\n}\n","import isSymbol from 'is-symbol';\nimport toPrimitive from 'to-primitive-x';\nimport trim, { trim2016 } from 'trim-x';\nimport $parseInt, { parseInt2016 } from 'parse-int-x';\nimport NAN from 'nan-x';\nvar binaryRadix = 2;\nvar octalRadix = 8;\nvar testCharsCount = 2;\nvar ERROR_MESSAGE = 'Cannot convert a Symbol value to a number';\n/** @type {NumberConstructor} */\n\nvar castNumber = testCharsCount.constructor;\nvar pStrSlice = ERROR_MESSAGE.slice;\nvar binaryRegex = /^0b[01]+$/i;\nvar RegExpConstructor = binaryRegex.constructor; // Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is\n// an own property of regexes. wtf.\n\nvar test = binaryRegex.test;\n\nvar isBinary = function _isBinary(value) {\n  return test.call(binaryRegex, value);\n};\n\nvar octalRegex = /^0o[0-7]+$/i;\n\nvar isOctal = function _isOctal(value) {\n  return test.call(octalRegex, value);\n};\n\nvar nonWSregex2016 = new RegExpConstructor(\"[\\x85\\u200B\\uFFFE]\", 'g');\n\nvar hasNonWS2016 = function _hasNonWS(value) {\n  return test.call(nonWSregex2016, value);\n};\n\nvar nonWSregex2018 = new RegExpConstructor(\"[\\x85\\u180E\\u200B\\uFFFE]\", 'g');\n\nvar hasNonWS2018 = function _hasNonWS(value) {\n  return test.call(nonWSregex2018, value);\n};\n\nvar invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;\n\nvar isInvalidHexLiteral = function _isInvalidHexLiteral(value) {\n  return test.call(invalidHexLiteral, value);\n};\n/**\n * This method converts argument to a value of type Number. (ES2016).\n *\n * @param {*} [argument] - The argument to convert to a number.\n * @throws {TypeError} - If argument is a Symbol or not coercible.\n * @returns {*} The argument converted to a number.\n */\n\n\nexport function toNumber2016(argument) {\n  var value = toPrimitive(argument, Number);\n\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  if (typeof value === 'string') {\n    if (isBinary(value)) {\n      return toNumber2016(parseInt2016(pStrSlice.call(value, testCharsCount), binaryRadix));\n    }\n\n    if (isOctal(value)) {\n      return toNumber2016(parseInt2016(pStrSlice.call(value, testCharsCount), octalRadix));\n    }\n\n    if (hasNonWS2016(value) || isInvalidHexLiteral(value)) {\n      return NAN;\n    }\n\n    var trimmed = trim2016(value);\n\n    if (trimmed !== value) {\n      return toNumber2016(trimmed);\n    }\n  }\n\n  return castNumber(value);\n}\n/**\n * This method converts argument to a value of type Number. (ES2018).\n *\n * @param {*} [argument] - The argument to convert to a number.\n * @throws {TypeError} - If argument is a Symbol or not coercible.\n * @returns {*} The argument converted to a number.\n */\n\nexport default function toNumber2018(argument) {\n  var value = toPrimitive(argument, castNumber);\n\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  if (typeof value === 'string') {\n    if (isBinary(value)) {\n      return toNumber2018($parseInt(pStrSlice.call(value, testCharsCount), binaryRadix));\n    }\n\n    if (isOctal(value)) {\n      return toNumber2018($parseInt(pStrSlice.call(value, testCharsCount), octalRadix));\n    }\n\n    if (hasNonWS2018(value) || isInvalidHexLiteral(value)) {\n      return NAN;\n    }\n\n    var trimmed = trim(value);\n\n    if (trimmed !== value) {\n      return toNumber2018(trimmed);\n    }\n  }\n\n  return castNumber(value);\n}\n"],"sourceRoot":""}